回溯基本概念
    回溯的处理思想有点类似枚举搜索。通过枚举所有的解，找到满足期望的解。为了有规律地枚举所有可能的解，避免遗漏和重复，我们把问题求解的过程分为多个阶段。每个阶段，都会面对一个岔路口，我们先随意选一条路走，
    当发现这条路走不通的时候（不符合期望的解），就回退到上一个岔路口，另选一种走法继续走。
    回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法，而满足回溯条件的某个状态的点称为“回溯点”。
    许多复杂的，规模较大的问题都可以使用回溯法，有“通用解题方法”的美称。
    回溯可以理解为递归的一种问题，不断地在每一层去试，每一层有不同的办法，类似于一个一个去试，看这个方法是否可行。最典型的应用是八皇后问题、数独。

回溯基本思想
    在包含问题的所有解的解空间树中，按照深度优先搜索的策略，从根结点出发深度探索解空间树。当探索到某一结点时，要先判断该结点是否包含问题的解，如果包含，就从该结点出发继续探索下去，如果该结点不包含问题的解，则逐层向其祖先结点回溯。（其实回溯法就是对隐式图的深度优先搜索算法）。
    若用回溯法求问题的所有解时，要回溯到根，且根结点的所有可行的子树都要已被搜索遍才结束。
    而若使用回溯法求任一个解时，只要搜索到问题的一个解就可以结束。


用回溯法解题的一般步骤：
    （1）针对所给问题，确定问题的解空间：
        首先应明确定义问题的解空间，问题的解空间应至少包含问题的一个（最优）解。
    （2）确定结点的扩展搜索规则
    （3）以深度优先方式搜索解空间，并在搜索过程中用剪枝函数避免无效搜索。


回溯法采用试错的思想，它尝试分布的去解决一个问题。在分步解决问题的过程中，当它通过尝试发现现有的分步答案不能得到有效的正确的解答的时候，它将取消上一步甚至是上几步的计算，再通过其他的可能的分步解答再次尝试寻找问题的答案。
回溯法通常用最简单的递归方法来实现，在反复重试上述的步骤后可能出现两种情况:
    找到一个可能存在的正确的答案;
    在尝试了所有可能的分步方法后宣告该问题没有答案。 在最坏的情况下，回溯法会导致一次复杂度为指数时间的计算。

